---
- connection: local
  hosts: localhost
  vars:
    controller: 10.144.131.50
    username: admin
    password: something
    tenant: admin
    cloud_name: Default-Cloud
    subnets: 2C-nw-9,2A-nw-10
    fqdn: foo.swap.avi.local
  tasks:
    - name: subnets passed
      debug: msg="{{ subnets }}"
      tags:
        - debug
    - name: Get cloud obj from the controller
      avi_api_session:
        controller: "{{ controller }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ tenant }}"
        http_method: get
        path: "cloud/?name={{ cloud_name }}"
      register: cloud_resp
    - name: Get filtered subnets from the controller
      tags:
        - debug
      avi_api_session:
        controller: "{{ controller }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ tenant }}"
        http_method: get
        path: "networksubnetlist/?cloud_uuid={{ cloud_resp.obj.results[0].uuid }}&name={{ item }}"
      register: subnet_filter_objs
      with_items: "{{ subnets.split(',') }}"
    - name: Filter the subnets that match the name
      set_fact:
        subnet_objs: "{{ subnet_objs|default({})|combine({item.1.name: item.1}) }}"
      when:
        - item.1.name in "{{ subnets.split(',') }}"
      with_subelements:
        - "{{ subnet_filter_objs.results }}"
        - obj.results
    - name: List of valid subnets
      debug: msg="{{ subnet_objs }}"
    - name: Create VIP Objects
      set_fact:
        vips: "{{ vips|default([]) + [{'vip_id': item.0, 'subnet_uuid': item.1.uuid, 'auto_allocate_ip': true}] }}"
      with_indexed_items:
        - "{{ subnet_objs.values() }}"
    - name: Vip objects
      debug: msg="{{ vips }}"

    - name: Creating multi vip VS
      avi_virtualservice:
        controller: "{{ controller }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ tenant }}"
        cloud_ref: "/api/cloud?name={{ cloud_name }}"
        name: avi_aws_test
        services:
          - port: 80
        vip: "{{ vips }}"
        dns_info:
          - fqdn: "{{ fqdn }}"
      register: vs
    - name: VS created
      debug: msg="{{ vs.obj }}"
