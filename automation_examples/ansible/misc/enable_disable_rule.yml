#
# @author: Gaurav Rastogi grastogi@avinetworks.com
# Simple playbook to create virtualservice and get on it using
# avi_api_session module
# ansible-playbook -M <location of avi ansible modules> --extra-vars "enable=true index=1 tenant=admin policyset_name=policyname" enable_disable_rule.yml
---
- hosts: localhost
  connection: local
  vars:
    avi_credentials:
      controller: "{{ avi_controller }}"
      username: "{{ avi_username }}"
      password: "{{ avi_password }}"
    policyset_name: "{{ policyset_name }}"
    enable: "{{ enable }}"
    index: "{{ index }}"
    tenant_name: "{{ tenant_name }}"
  tasks:
    - name: Get HTTP Policy
      avi_httppolicyset:
        avi_credentials: "{{ avi_credentials }}"
        tenant: "{{ tenant_name }}"
        name: "{{ policyset_name }}"
      register: policy
    - name: find rule
      set_fact:
        rule: "{{ item.1 }}"
      with_indexed_items: "{{ policy.obj.http_request_policy.rules }}"
      when: item.1.index == index|int
    - name: update rule
      set_fact:
        new_rule: "{{ rule|combine({'enable': enable | bool}) }}"
    - name: updated rule
      debug: msg="{{ new_rule }}"
    - name: patch rule in controller
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        tenant: "{{ tenant_name }}"
        http_method: patch
        path: "httppolicyset/{{ policy.obj.uuid }}"
        data:
          add:
            http_request_policy:
              rules:
                - "{{ new_rule }}"
