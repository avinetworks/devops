# Simple application name foo
# It has following characterstics
# Pool with two servers and HTTP health monitor
# Single VIP
# HTTPS application
# Uses secured HTTPS profile.
# Automatic Re-direct to HTTPS - SSL Everywhere
# Content switching to pool bar if it matches /bar and pool foo if it match /foo
# application persistency profile
---
- hosts: localhost
  connection: local
  vars:
    avi_credentials:
      controller: "{{ avi_controller }}"
      username: "{{ avi_username }}"
      password: "{{ avi_password }}"
    api_version: 17.1.2
    app_name: mega
  roles:
    - role: avinetworks.avisdk
  tasks:
    - name: create self-signed SSL cert
      command: openssl req -new -nodes -x509 -subj "/C=US/ST=CA/L=San Francisco/O=IT/CN={{ app_name }}.com" -days 3650 -keyout ssl_certs/{{ app_name }}.key -out ssl_certs/{{ app_name }}.crt -extensions v3_ca creates=ssl_certs/{{ app_name }}.crt
    - name: Upload or Update SSL certificate - always changed due to sensitve field
      avi_sslkeyandcertificate:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        tenant: admin
        key: "{{ lookup('file', 'ssl_certs/'~app_name~'.key') }}"
        certificate:
          self_signed: true
          certificate: "{{ lookup('file', 'ssl_certs/'~app_name~'.crt') }}"
        type: SSL_CERTIFICATE_TYPE_VIRTUALSERVICE
        name: "{{ app_name }}-cert"

    - name: Create or Update Pool A
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        name: "{{ app_name }}-pool-bar"
        health_monitor_refs: '/api/healthmonitor?name=System-HTTP'
        cloud_ref: '/api/cloud?name=Default-Cloud'
        servers:
          - ip:
               addr: '10.90.64.16'
               type: 'V4'

    - name: Create or Update Pool B
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        name: "{{ app_name }}-pool-foo"
        health_monitor_refs:
          - '/api/healthmonitor?name=System-HTTP'
        cloud_ref: '/api/cloud?name=Default-Cloud'
        servers:
          - ip:
               addr: '10.90.64.16'
               type: 'V4'

    - name: Create or Update Default Pool
      avi_pool:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        name: "{{ app_name }}-pool"
        health_monitor_refs:
          - '/api/healthmonitor?name=System-HTTP'
        cloud_ref: '/api/cloud?name=Default-Cloud'
        servers:
          - ip:
               addr: '10.90.64.16'
               type: 'V4'
        application_persistence_profile_ref: "/api/applicationpersistenceprofile?name=System-Persistence-Client-IP"

    - name: Create HTTP PolicySet
      avi_httppolicyset:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        name: "{{ app_name }}-httppolicy"
        http_request_policy:
          rules:
            - index: 1
              enable: true
              name: "{{ app_name }}-pool-foo"
              match:
                path:
                  match_case: INSENSITIVE
                  match_str:
                    - /foo
                  match_criteria: EQUALS
              switching_action:
                action: HTTP_SWITCHING_SELECT_POOL
                status_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200
                pool_ref: "/api/pool?name={{ app_name }}-pool-foo"
            - index: 2
              enable: true
              name: test-test2
              match:
                path:
                  match_case: INSENSITIVE
                  match_str:
                    - /bar
                  match_criteria: CONTAINS
              switching_action:
                action: HTTP_SWITCHING_SELECT_POOL
                status_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200
                pool_ref: "/api/pool?name={{ app_name }}-pool-bar"
        is_internal_policy: false
    - avi_vsvip:
        name: vsvip-testvs-Default-Cloud
        avi_credentials: '{{ avi_credentials }}' 
        api_context: '{{avi_api_context | default(omit)}}'
        tenant_ref: /api/tenant/?name={{ tenant }}
        cloud_ref: /api/cloud/?name=Default-Cloud
        state: "{{ state }}"
        vip:
        - vip_id: '1'
          avi_allocated_fip: false
          auto_allocate_ip: false
          enabled: true
          auto_allocate_floating_ip: false
          avi_allocated_vip: false
          auto_allocate_ip_type: V4_ONLY
          ip_address:
            type: V4
            addr: 198.51.100.253
    - name: Create Virtual Service
      avi_virtualservice:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ api_version }}"
        name: "{{ app_name }}"
        pool_ref: "/api/pool?name={{ app_name }}-pool"
        cloud_ref: '/api/cloud?name=Default-Cloud'
        vsvip_ref: /api/vsvip/?name=vsvip-testvs-Default-Cloud
        ssl_key_and_certificate_refs:
          - '/api/sslkeyandcertificate?name={{ app_name }}-cert'
        ssl_profile_ref: '/api/sslprofile?name=System-Standard'
        application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'
        services:
          - port: 80
          - port: 443
            enable_ssl: true
        http_policies:
          - index: 11
            http_policy_set_ref: '/api/httppolicyset?name={{ app_name }}-httppolicy'
